<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reverse-Proxy on renan</title>
    <link>http://renanm.com/tags/reverse-proxy/</link>
    <description>Recent content in Reverse-Proxy on renan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 29 Sep 2025 20:45:00 -0400</lastBuildDate><atom:link href="http://renanm.com/tags/reverse-proxy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Protecting Home Assistant with Caddy and Microsoft Entra ID</title>
      <link>http://renanm.com/posts/protecting-ha-caddy-entra-updated/</link>
      <pubDate>Mon, 29 Sep 2025 20:45:00 -0400</pubDate>
      
      <guid>http://renanm.com/posts/protecting-ha-caddy-entra-updated/</guid>
      
        <description>&lt;p&gt;In my never-ending quest to clean up my home lab, I finally tackled something that had been bugging me for a while: &lt;strong&gt;how to safely expose Home Assistant to the outside world without sketchy logins or self-signed cert warnings.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So first things first: I had a couple of options for the reverse proxy layer — the usual suspects like nginx or Traefik — but I went with &lt;strong&gt;Caddy&lt;/strong&gt;. Why? Honestly, it’s just easier. The config syntax is clean, it automatically does the right thing most of the time, and the community docs/examples are great. With nginx I always feel like I’m hunting down one more &lt;code&gt;proxy_set_header&lt;/code&gt; line. With Caddy, it just&amp;hellip; works.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>